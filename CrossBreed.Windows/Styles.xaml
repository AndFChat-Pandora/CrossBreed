<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:views="clr-namespace:CrossBreed.Windows.Views">
	<Style TargetType="{x:Type Control}" x:Key="BaseStyle">
		<Setter Property="FontSize" Value="{DynamicResource Theme.FontSize}" />
		<Setter Property="Foreground" Value="{DynamicResource Theme.Foreground}" />
	</Style>
	<Style TargetType="{x:Type Control}" x:Key="BaseStyleBG" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Background" Value="{DynamicResource Theme.Background}" />
	</Style>
	<Style TargetType="{x:Type TextBoxBase}" x:Key="BaseTextBoxStyle">
		<Setter Property="FontSize" Value="{DynamicResource Theme.FontSize}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColorLight}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyleBG}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<TextBlock Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="{DynamicResource Theme.AccentColor}" />
		<Setter Property="Cursor" Value="Hand" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{DynamicResource Theme.AccentColorLight}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Button}" x:Key="PrimaryButton" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="Background" Value="{DynamicResource Theme.AccentColor}" />
		<Setter Property="Foreground" Value="{DynamicResource Theme.AccentForeground}" />
		<Setter Property="Padding" Value="5,0,5,0" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource Theme.AccentColorLight}" />
				<Setter Property="Foreground" Value="{DynamicResource Theme.AccentForeground}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Label}" BasedOn="{StaticResource BaseStyle}" />
	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBoxStyle}" />
	<Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource BaseTextBoxStyle}" />
	<Style TargetType="{x:Type views:IconTextBox}" BasedOn="{StaticResource BaseTextBoxStyle}" />
	<Style TargetType="{x:Type PasswordBox}">
		<Setter Property="FontSize" Value="{DynamicResource Theme.FontSize}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColorLight}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ProgressBar}">
		<Setter Property="Foreground" Value="{DynamicResource Theme.AccentColor}" />
	</Style>
	<Style TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseStyleBG}" />
	<Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource BaseStyleBG}">
		<Setter Property="BorderThickness" Value="0" />
	</Style>
	<Style TargetType="{x:Type ListBoxItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border Padding="2" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="1"
						BorderBrush="{TemplateBinding BorderBrush}">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColorLight}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{DynamicResource Theme.AccentColorLight}" />
							<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColor}" />
							<Setter Property="Foreground" Value="{DynamicResource Theme.AccentForeground}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource BaseStyle}">
		<Setter Property="Background" Value="{DynamicResource Theme.Background}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Border Padding="3" Background="{TemplateBinding Background}" BorderThickness="1,1,1,0" CornerRadius="1"
						BorderBrush="{DynamicResource Theme.Foreground}" Margin="1,0,1,0">
						<TextBlock Text="{TemplateBinding Header}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="Header" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource Theme.AccentColorLight}" />
							<Setter Property="Foreground" TargetName="Header" Value="{DynamicResource Theme.AccentForeground}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource Theme.AccentColor}" />
							<Setter Property="Foreground" TargetName="Header" Value="{DynamicResource Theme.AccentForeground}" />
							<Setter Property="Margin" Value="0,0,0,-1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource BaseStyleBG}" />
	<Style TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="{DynamicResource Theme.FontSize}" />
		<Setter Property="Foreground" Value="{DynamicResource Theme.Foreground}" />
	</Style>
	<Style TargetType="{x:Type views:BbCodeView}" BasedOn="{StaticResource {x:Type TextBlock}}" />
	<Style TargetType="{x:Type Separator}">
		<Setter Property="Foreground" Value="{DynamicResource Theme.AccentColor}" />
		<Setter Property="Background" Value="{DynamicResource Theme.AccentColor}" />
	</Style>
	<Style TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColor}" />
	</Style>
	<Style TargetType="{x:Type ContextMenu}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
	</Style>
	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<TextBlock Text="{TemplateBinding Header}" Background="{DynamicResource Theme.Background}" Foreground="{TemplateBinding Foreground}" Cursor="Hand" Padding="5" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Margin" Value="-1,0,0,0" />
		<Setter Property="Foreground" Value="{DynamicResource Theme.AccentColor}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{DynamicResource Theme.AccentColorLight}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Window}">
		<Setter Property="Background" Value="{DynamicResource Theme.Background}" />
	</Style>
	<Style TargetType="{x:Type ToolTip}">
		<Style.Resources>
			<Style TargetType="{x:Type ContentPresenter}">
				<Style.Resources>
					<Style TargetType="TextBlock">
						<Setter Property="TextWrapping" Value="Wrap" />
					</Style>
				</Style.Resources>
			</Style>
		</Style.Resources>
		<Setter Property="MaxWidth" Value="500" />
	</Style>

	<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Name="Border" Margin="1" BorderBrush="{DynamicResource Theme.Foreground}" CornerRadius="1" BorderThickness="1" Background="Transparent">
						<Path Name="Path" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{DynamicResource Theme.Foreground}" StrokeThickness="1.5"
							Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Path" Property="Stroke" Value="{DynamicResource Theme.AccentForeground}" />
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource Theme.AccentColorLight}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Path" Property="Stroke" Value="{DynamicResource Theme.AccentForeground}" />
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource Theme.AccentColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border CornerRadius="1" BorderBrush="{DynamicResource Theme.Foreground}" BorderThickness="1" Background="Transparent" Name="Border" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Border" Value="{DynamicResource Theme.AccentColorLight}" />
						</Trigger>
						<Trigger Property="IsDragging" Value="true">
							<Setter Property="Background" TargetName="Border" Value="{DynamicResource Theme.AccentColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type RepeatButton}" x:Key="ScrollBarRepeatButton">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="{DynamicResource Theme.ForegroundLight}" />
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource Theme.AccentColorLight}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type ScrollBar}">
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Height" Value="18" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<DockPanel>
								<RepeatButton DockPanel.Dock="Left" Style="{StaticResource ScrollBarButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M4,0L0,4L4,8" />
								<RepeatButton DockPanel.Dock="Right" Style="{StaticResource ScrollBarButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M0,0L4,4L0,8" />
								<Track Name="PART_Track">
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumb}" />
									</Track.Thumb>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarRepeatButton}" />
									</Track.IncreaseRepeatButton>
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarRepeatButton}" />
									</Track.DecreaseRepeatButton>
								</Track>
							</DockPanel>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="18" />
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<DockPanel>
								<RepeatButton DockPanel.Dock="Top" Style="{StaticResource ScrollBarButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M0,4L4,0L8,4" />
								<RepeatButton DockPanel.Dock="Bottom" Style="{StaticResource ScrollBarButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M0,0L4,4L8,0" />
								<Track Name="PART_Track" IsDirectionReversed="True">
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumb}" />
									</Track.Thumb>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarRepeatButton}" />
									</Track.IncreaseRepeatButton>
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarRepeatButton}" />
									</Track.DecreaseRepeatButton>
								</Track>
							</DockPanel>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type DataGrid}">
		<Setter Property="Background" Value="{DynamicResource Theme.Background}" />
		<Setter Property="Foreground" Value="{DynamicResource Theme.Foreground}" />
		<Setter Property="RowBackground" Value="{DynamicResource Theme.Background}" />
		<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColor}" />
		<Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource Theme.AccentColor}" />
		<Setter Property="VerticalGridLinesBrush" Value="{DynamicResource Theme.AccentColor}" />
	</Style>
	<Style TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="SeparatorBrush" Value="{DynamicResource Theme.AccentColor}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="SeparatorVisibility" Value="Visible" />
		<Setter Property="BorderBrush" Value="{DynamicResource Theme.AccentColor}" />
		<Setter Property="Background" Value="{DynamicResource Theme.Background}" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Foreground" Value="{DynamicResource Theme.AccentColor}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
	</Style>
	<Style TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="Background" Value="{DynamicResource Theme.AccentColor}" />
	</Style>
	<Style TargetType="{x:Type DataGridRow}">
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{x:Null}" />
				<Setter Property="BorderBrush" Value="{x:Null}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type DataGridCell}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{x:Null}" />
				<Setter Property="BorderBrush" Value="{x:Null}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="Background" Value="{DynamicResource Theme.Background}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
					<TextBlock Text="{TemplateBinding Content}" Padding="5" Width="{TemplateBinding Width}" TextAlignment="Center" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ContentControl}" x:Key="PopupContentStyle">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border Background="{DynamicResource Theme.Background}" BorderBrush="{DynamicResource Theme.AccentColor}" BorderThickness="2" Padding="10">
						<ContentPresenter Content="{TemplateBinding ContentControl.Content}" />
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton ClickMode="Press" Focusable="False"
							IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
							<ToggleButton.Template>
								<ControlTemplate TargetType="{x:Type ToggleButton}">
									<Border BorderBrush="{DynamicResource Theme.AccentColor}" BorderThickness="1" CornerRadius="1" Name="Content">
										<DockPanel>
											<Path Name="Arrow" Data="M0,0L3,4L6,0" DockPanel.Dock="Right" VerticalAlignment="Center" Stroke="{DynamicResource Theme.AccentColor}"
												Margin="5,0,5,0" StrokeThickness="1" UseLayoutRounding="True" />
											<Border Margin="1,1,1,1" Background="Transparent" />
										</DockPanel>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Background" TargetName="Content" Value="{DynamicResource Theme.AccentColorLight}" />
											<Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource Theme.AccentForeground}" />
										</Trigger>
										<Trigger Property="IsChecked" Value="True">
											<Setter Property="Background" TargetName="Content" Value="{DynamicResource Theme.AccentColor}" />
											<Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource Theme.AccentForeground}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>

						<ContentPresenter Margin="5,3,23,3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center"
							Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
						<TextBox Name="PART_EditableTextBox" Margin="3,3,23,3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent"
							HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True">
							<TextBox.Template>
								<ControlTemplate TargetType="{x:Type TextBox}">
									<Border Name="PART_ContentHost" Focusable="False" />
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<Popup Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="Slide">
							<Border Name="DropDownBorder" Margin="0,1,0,0" Background="{DynamicResource Theme.Background}" CornerRadius="0" BorderThickness="1,1,1,1"
								BorderBrush="{DynamicResource AccentColor}" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<ScrollViewer Margin="4" SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
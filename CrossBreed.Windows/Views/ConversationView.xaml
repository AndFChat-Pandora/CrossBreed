<mvx:MvxWpfView
	x:TypeArguments="viewModels:ConversationViewModel"
	x:Class="CrossBreed.Windows.Views.ConversationView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:views="clr-namespace:CrossBreed.Windows.Views"
	xmlns:mvx="clr-namespace:MvvmCross.Wpf.Views;assembly=MvvmCross.Wpf"
	xmlns:viewModels="clr-namespace:CrossBreed.ViewModels;assembly=CrossBreed.ViewModels"
	xmlns:local="clr-namespace:CrossBreed.Windows"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance viewModels:ConversationViewModel}"
	d:DesignHeight="300" d:DesignWidth="300">
	<mvx:MvxWpfView.Resources>
		<Style TargetType="{x:Type views:NotificationSettingsView}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type views:NotificationSettingsView}">
						<StackPanel>
							<TextBlock FontSize="{DynamicResource Theme.FontSizeBig}" Text="{TemplateBinding Title}" />
							<CheckBox Content="{Binding [ConversationSettings_Log]}" IsChecked="{Binding NotifySettings.Log, RelativeSource={RelativeSource TemplatedParent}}" />
							<CheckBox Content="{Binding [ConversationSettings_Notify]}" IsChecked="{Binding NotifySettings.Notify, RelativeSource={RelativeSource TemplatedParent}}" />
							<StackPanel Margin="15,0,0,0">
								<CheckBox Content="{Binding [ConversationSettings_NotifyToast]}"
									IsChecked="{Binding NotifySettings.Toast, RelativeSource={RelativeSource TemplatedParent}}" />
								<CheckBox Content="{Binding [ConversationSettings_NotifySound]}"
									IsChecked="{Binding NotifySettings.Sound, RelativeSource={RelativeSource TemplatedParent}}" />
								<CheckBox Content="{Binding [ConversationSettings_NotifyFlash]}"
									IsChecked="{Binding NotifySettings.Flash, RelativeSource={RelativeSource TemplatedParent}}" />
							</StackPanel>
						</StackPanel>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</mvx:MvxWpfView.Resources>
	<DockPanel>
		<StackPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch">
			<Expander HorizontalAlignment="Stretch" x:Name="Expander" Margin="10,5,10,0">
				<Expander.Resources>
					<Style TargetType="{x:Type Button}" x:Key="SettingsButton">
						<EventSetter Event="Click" Handler="ShowSettings" />
					</Style>
				    <Style TargetType="{x:Type Button}" x:Key="LogsButton">
				        <EventSetter Event="Click" Handler="ShowLogs" />
				    </Style>
					<Style TargetType="{x:Type DockPanel}" x:Key="TopBar">
						<EventSetter Event="Loaded" Handler="EventSetter_OnHandler" />
					</Style>
				</Expander.Resources>
				<Expander.Style>
					<Style TargetType="{x:Type Expander}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding Converter={StaticResource TypeConverter}}" Value="{x:Type viewModels:ChannelConversationViewModel}">
								<Setter Property="Header">
									<Setter.Value>
										<DockPanel Width="{Binding ActualWidth, ElementName=Expander}" Style="{StaticResource TopBar}" Margin="0,0,0,5">
											<StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
												<views:IconButton Geometry="{x:Static local:Icons.Settings}" Style="{StaticResource SettingsButton}" />
											    <views:IconButton Geometry="{x:Static local:Icons.Logs}" Style="{StaticResource LogsButton}" />
											</StackPanel>
											<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
												<Button Content="{Binding ModeText}" Command="{Binding ToggleAdsCommand}" Margin="10,0,0,0"></Button>
											</StackPanel>
										</DockPanel>
									</Setter.Value>
								</Setter>
								<Setter Property="Content">
									<Setter.Value>
										<ScrollViewer MaxHeight="400" VerticalScrollBarVisibility="Auto">
											<views:BbCodeView BbCode="{Binding FormattedDescription}" TextWrapping="Wrap" />
										</ScrollViewer>
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding Converter={StaticResource TypeConverter}}" Value="{x:Type viewModels:CharacterConversationViewModel}">
								<Setter Property="Header">
									<Setter.Value>
										<DockPanel Style="{StaticResource TopBar}" Margin="0,0,0,5">
											<StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
												<views:IconButton Geometry="{x:Static local:Icons.Settings}" Style="{StaticResource SettingsButton}" />
											  <views:IconButton Geometry="{x:Static local:Icons.Logs}" Style="{StaticResource LogsButton}" />
											</StackPanel>
											<views:UserView Character="{Binding Character}" VerticalAlignment="Center" />
										</DockPanel>
									</Setter.Value>
								</Setter>
								<Setter Property="Content">
									<Setter.Value>
										<views:BbCodeView BbCode="{Binding Character.FormattedStatus}" />
									</Setter.Value>
								</Setter>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Expander.Style>
			</Expander>
			<Rectangle Height="2" Fill="{DynamicResource Theme.AccentColor}" />
		</StackPanel>
		<views:AutoScrollViewer VerticalScrollBarVisibility="Auto" Margin="5">
			<RichTextBox IsReadOnly="True" x:Name="TextBlock" Background="{DynamicResource Theme.Background}" Foreground="{DynamicResource Theme.Foreground}"
				BorderThickness="0" IsDocumentEnabled="True" />
		</views:AutoScrollViewer>
		<Popup Placement="Center" x:Name="SettingsPopup" StaysOpen="False" DataContext="{x:Null}">
			<ContentControl Style="{StaticResource PopupContentStyle}">
				<StackPanel>
					<views:NotificationSettingsView NotifySettings="{Binding Settings.NotifyMessage}" Title="{Binding [ConversationSettings_NotifyMessage]}" />
					<StackPanel Visibility="{Binding IsChannel, Converter={StaticResource VisibilityConverter}}" Margin="0,10,0,0">
						<views:NotificationSettingsView NotifySettings="{Binding Settings.NotifyAd}" Title="{Binding [ConversationSettings_NotifyAd]}" />
						<views:NotificationSettingsView NotifySettings="{Binding Settings.NotifyUser}" Title="{Binding [ConversationSettings_NotifyUser]}" Margin="0,10,0,0" />
					</StackPanel>
					<StackPanel Visibility="{Binding IsChannel, Converter={StaticResource VisibilityConverter}, ConverterParameter=Negate}" Margin="0,10,0,0">
						<CheckBox Content="{Binding [ConversationSettings_ShowIcon]}" />
					</StackPanel>
					<Button HorizontalAlignment="Center" Style="{StaticResource PrimaryButton}" Command="{Binding SaveCommand}" Content="{Binding [ConversationSettings_Save]}" />
				</StackPanel>
			</ContentControl>
		</Popup>
	</DockPanel>
</mvx:MvxWpfView>
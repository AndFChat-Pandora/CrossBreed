<UserControl
	x:Class="CrossBreed.Windows.Views.HomeTab"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:viewModels="clr-namespace:CrossBreed.ViewModels;assembly=CrossBreed.ViewModels"
	xmlns:local="clr-namespace:CrossBreed.Windows"
	xmlns:views="clr-namespace:CrossBreed.Windows.Views"
	mc:Ignorable="d"
	x:Name="this"
	d:DesignHeight="300" d:DesignWidth="300">
	<TabControl BorderThickness="0,1,0,0" Margin="5">
		<TabItem Header="{Binding [Tab_Settings]}" Content="{Binding ElementName=this, Path=Settings}" Padding="5" />
		<TabItem Header="{Binding [CharacterLists_Title]}" DataContext="{Binding ElementName=this, Path=CharacterListsViewModel}">
			<StackPanel Margin="10">
				<TextBlock Text="{Binding [CharacterLists_Help]}" />
				<StackPanel Orientation="Horizontal" Margin="0,5,0,0">
					<Button Command="{Binding SaveCommand}" Content="{Binding [CharacterLists_Save]}" Style="{StaticResource PrimaryButton}" />
					<Button Margin="10,0,0,0" Command="{Binding AddCommand}" Content="{Binding [CharacterLists_Add]}" />
				</StackPanel>
				<ListView ItemsSource="{Binding AllLists}" BorderThickness="0" Margin="0,10,0,0">
					<ListView.Resources>
						<Style TargetType="{x:Type ListViewItem}">
							<Setter Property="HorizontalContentAlignment" Value="Stretch" />
							<Setter Property="Background" Value="Transparent" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ListViewItem}">
										<GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0"
											Content="{TemplateBinding Content}" />
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
						<Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
							<Setter Property="IsEnabled" Value="False"/>
						</Style>
					</ListView.Resources>
					<ListView.View>
						<GridView AllowsColumnReorder="False">
							<GridView.Columns>
								<GridViewColumn Header="{Binding [CharacterLists_Name]}">
									<GridViewColumn.CellTemplate>
										<DataTemplate DataType="{x:Type viewModels:CharacterListsViewModel+Item}">
											<TextBox IsReadOnly="{Binding IsDefault}" Text="{Binding Name}" HorizontalAlignment="Stretch" Background="Transparent"
												BorderThickness="0" Foreground="{DynamicResource Theme.Foreground}" CaretBrush="{DynamicResource Theme.Foreground}" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Header="{Binding [CharacterLists_TextColor]}">
									<GridViewColumn.CellTemplate>
										<DataTemplate DataType="{x:Type viewModels:CharacterListsViewModel+Item}">
											<views:ColorPicker SelectedColor="{Binding TextColor, Converter={StaticResource MvxColorConverter}}" Height="20" Width="20" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Header="{Binding [CharacterLists_UnderlineColor]}">
									<GridViewColumn.CellTemplate>
										<DataTemplate DataType="{x:Type viewModels:CharacterListsViewModel+Item}">
											<views:ColorPicker SelectedColor="{Binding UnderlineColor, Converter={StaticResource MvxColorConverter}}" Height="20" Width="20" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Header="{Binding [CharacterLists_SortOrder]}">
									<GridViewColumn.CellTemplate>
										<DataTemplate DataType="{x:Type viewModels:CharacterListsViewModel+Item}">
											<views:NumberPicker Minimum="1" Maximum="20" Value="{Binding SortOrder}" VerticalAlignment="Center" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Header="{Binding [CharacterLists_HideAds]}">
									<GridViewColumn.CellTemplate>
										<DataTemplate DataType="{x:Type viewModels:CharacterListsViewModel+Item}">
											<CheckBox IsChecked="{Binding HideAds}" VerticalAlignment="Center" HorizontalAlignment="Center" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Header="{Binding [CharacterLists_HideInSearch]}">
									<GridViewColumn.CellTemplate>
										<DataTemplate DataType="{x:Type viewModels:CharacterListsViewModel+Item}">
											<CheckBox IsChecked="{Binding HideInSearch}" VerticalAlignment="Center" HorizontalAlignment="Center" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
							</GridView.Columns>
						</GridView>
					</ListView.View>
				</ListView>
			</StackPanel>
		</TabItem>
		<TabItem Header="{Binding [RecentConversations_Title]}" DataContext="{Binding ElementName=this, Path=RecentConversationsViewModel}">
			<DockPanel>
				<StackPanel>
					<TextBlock Text="{Binding [RecentConversations_Channels]}" FontSize="{DynamicResource Theme.FontSizeBig}" />
					<ItemsControl ItemsSource="{Binding RecentChannels}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Button Content="{Binding Item2}" Command="{Binding DataContext.JoinChannelCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
									CommandParameter="{Binding Item1}" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</StackPanel>
				<StackPanel Margin="10,0,0,0">
					<TextBlock Text="{Binding [RecentConversations_Characters]}" FontSize="{DynamicResource Theme.FontSizeBig}" />
					<ListBox ItemsSource="{Binding RecentCharacters}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VerticalContentAlignment="Top">
						<ListBox.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel />
							</ItemsPanelTemplate>
						</ListBox.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<StackPanel Width="80" MouseLeftButtonDown="{local:EventBinding MessageCommand}">
									<Image Source="{Binding Image}" />
									<TextBlock Text="{Binding Character.Name}" TextWrapping="Wrap" />
								</StackPanel>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ListBox>
				</StackPanel>
			</DockPanel>
		</TabItem>
	</TabControl>
</UserControl>
<UserControl
	x:Class="CrossBreed.Windows.Views.MessageBox"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:CrossBreed.Windows"
	xmlns:views="clr-namespace:CrossBreed.Windows.Views"
	xmlns:viewModels="clr-namespace:CrossBreed.ViewModels;assembly=CrossBreed.ViewModels"
	mc:Ignorable="d"
	x:Name="this"
	d:DesignHeight="300" d:DesignWidth="300">
	<StackPanel DataContext="{Binding ElementName=this}">
		<ToolBar Height="30" DockPanel.Dock="Top">
			<ToolBar.Resources>
				<Style TargetType="{x:Type ButtonBase}" x:Key="ButtonStyle">
					<Setter Property="Width" Value="25" />
					<Setter Property="Height" Value="30" />
					<Setter Property="Padding" Value="5" />
				</Style>
				<Style TargetType="{x:Type TextBlock}">
					<Setter Property="FontSize" Value="14" />
					<Setter Property="VerticalAlignment" Value="Center" />
					<Setter Property="FontWeight" Value="Medium" />
				</Style>
				<Style TargetType="{x:Type Image}">
					<Setter Property="Margin" Value="5" />
				</Style>
			</ToolBar.Resources>
			<Button Click="BbCodeButton" ToolTip="Bold" Style="{StaticResource ButtonStyle}" Tag="b">
				<TextBlock FontWeight="UltraBlack">B</TextBlock>
			</Button>
			<Button Click="BbCodeButton" ToolTip="Italic" Style="{StaticResource ButtonStyle}" Tag="i">
				<TextBlock FontStyle="Italic">I</TextBlock>
			</Button>
			<Button Click="BbCodeButton" ToolTip="Underline" Style="{StaticResource ButtonStyle}" Tag="u">
				<TextBlock TextDecorations="Underline">U</TextBlock>
			</Button>
			<Button Click="BbCodeButton" ToolTip="Strikethrough" Style="{StaticResource ButtonStyle}" Tag="s">
				<TextBlock TextDecorations="Strikethrough">S</TextBlock>
			</Button>
			<Button Click="BbCodeButton" ToolTip="Big Text" Style="{StaticResource ButtonStyle}" Tag="big">
				<TextBlock FontSize="20">A</TextBlock>
			</Button>
			<Button Click="BbCodeButton" ToolTip="Small Text" Style="{StaticResource ButtonStyle}" Tag="small">
				<TextBlock FontSize="12">A</TextBlock>
			</Button>
			<Button Click="BbCodeButton" ToolTip="Superscript" Style="{StaticResource ButtonStyle}" Tag="sup">
				<TextBlock VerticalAlignment="Stretch">x<Run BaselineAlignment="TextTop" FontSize="8">A</Run></TextBlock>
			</Button>
			<Button Click="BbCodeButton" ToolTip="Subscript" Style="{StaticResource ButtonStyle}" Tag="sub">
				<TextBlock VerticalAlignment="Stretch">x<Run BaselineAlignment="Subscript" FontSize="8">A</Run></TextBlock>
			</Button>
			<views:ColorPicker AvailableColors="{Binding AvailableColors.Keys}" SelectedColorChanged="ColorSelected">
				<views:ColorPicker.ButtonStyle>
					<Style TargetType="{x:Type ContentControl}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate>
									<TextBlock Width="25" TextAlignment="Center" Foreground="{DynamicResource Theme.AccentColor}" FontSize="14" VerticalAlignment="Center">A</TextBlock>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</views:ColorPicker.ButtonStyle>
			</views:ColorPicker>
			<Button Click="HyperlinkButton" Style="{StaticResource ButtonStyle}">
				<Path Data="{x:Static local:Icons.Link}" Stroke="Black" StrokeThickness="1.5" Stretch="Uniform" />
			</Button>
			<Popup x:Name="HyperlinkPopup" StaysOpen="False" Placement="MousePoint" IsOpen="False">
				<ContentControl Style="{StaticResource PopupContentStyle}">
					<StackPanel>
						<TextBlock>Link URL:</TextBlock>
						<TextBox x:Name="HyperlinkUrl" Width="200" />
						<Button Margin="0,10,0,0" Click="HyperlinkApplyButton" Tag="url">Apply</Button>
					</StackPanel>
				</ContentControl>
			</Popup>
			<Button Click="BbCodeButton" Style="{StaticResource ButtonStyle}" Tag="user">
				<Path Data="{x:Static local:Icons.User}" Fill="Black" Stretch="Uniform" />
			</Button>
			<Button Click="BbCodeButton" Style="{StaticResource ButtonStyle}" Tag="icon">
				<Path Data="{x:Static local:Icons.Icon}" Fill="Black" Stretch="Uniform" />
			</Button>
			<Button Click="BbCodeButton" Style="{StaticResource ButtonStyle}" Tag="eicon">
				<Path Data="{x:Static local:Icons.Image}" Fill="Black" Stretch="Uniform" />
			</Button>
			<Button Click="ChannelButton" Style="{StaticResource ButtonStyle}">
				<Path Data="{x:Static local:Icons.Channel}" Fill="Black" Stretch="Uniform" />
			</Button>
			<ToggleButton IsChecked="{Binding IsSimple}" Style="{StaticResource ButtonStyle}">
				<Path Data="{x:Static local:Icons.Code}" Stroke="Black" StrokeThickness="1" Stretch="Uniform" />
			</ToggleButton>
			<Popup x:Name="ChannelsPopup" StaysOpen="False" Placement="MousePoint" IsOpen="False">
				<ContentControl Style="{StaticResource PopupContentStyle}" DataContext="{Binding ChannelsViewModel}">
					<TabControl ItemsSource="{Binding Tabs}" SelectedItem="{Binding SelectedTab}" Height="300" Width="300">
						<TabControl.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Name}" />
							</DataTemplate>
						</TabControl.ItemTemplate>
						<TabControl.ContentTemplate>
							<DataTemplate DataType="{x:Type viewModels:ChannelsViewModel+Tab}">
								<DockPanel>
									<views:IconTextBox DockPanel.Dock="Bottom" Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}">
										<views:IconTextBox.Path>
											<Path Data="{x:Static local:Icons.Search}" Stroke="{DynamicResource Theme.Foreground}" StrokeThickness="1.5" />
										</views:IconTextBox.Path>
									</views:IconTextBox>
									<ListBox HorizontalAlignment="Stretch" ItemsSource="{Binding Channels}">
										<ListBox.ItemTemplate>
											<DataTemplate>
												<Button Click="ChannelSelected" Tag="{Binding Item}" Content="{Binding Name}" />
											</DataTemplate>
										</ListBox.ItemTemplate>
									</ListBox>
								</DockPanel>
							</DataTemplate>
						</TabControl.ContentTemplate>
					</TabControl>
				</ContentControl>
			</Popup>
			<ToggleButton IsChecked="{Binding TabViewModel.AutoPostAds}">
				<Path Data="{x:Static local:Icons.Repeat}" Fill="Black" Stretch="Uniform" />
				<ToggleButton.Style>
					<Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type ToggleButton}">
						<Setter Property="Visibility" Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding TabViewModel.IsShowingAds}" Value="True">
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ToggleButton.Style>
			</ToggleButton>
		</ToolBar>
		<ScrollViewer MaxHeight="200" VerticalScrollBarVisibility="Auto">
			<Grid>
				<DockPanel Visibility="{Binding IsSimple, Converter={StaticResource VisibilityConverter}}">
					<TextBlock x:Name="CharacterCount" DockPanel.Dock="Right" VerticalAlignment="Center" />
					<TextBox Text="{Binding TabViewModel.EnteredText}" x:Name="TextBox" TextWrapping="Wrap" />
				</DockPanel>
				<RichTextBox x:Name="RichTextBox" Visibility="{Binding IsSimple, Converter={StaticResource VisibilityConverter}, ConverterParameter=Negate}">
					<FlowDocument />
				</RichTextBox>
				<Grid>
					<Grid.Style>
						<Style TargetType="{x:Type Grid}">
							<Setter Property="Visibility" Value="Collapsed" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding TabViewModel.IsAutoPosting}" Value="True">
									<Setter Property="Visibility" Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Grid.Style>
					<Rectangle Fill="{DynamicResource Theme.AccentColorLight}" />
					<TextBlock Text="{Binding TabViewModel.[Chat_AutoPosting]}" Margin="5,0,0,0" />
				</Grid>
			</Grid>
		</ScrollViewer>
	</StackPanel>
</UserControl>
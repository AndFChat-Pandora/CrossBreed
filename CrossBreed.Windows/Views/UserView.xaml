<TextBlock
	x:Class="CrossBreed.Windows.Views.UserView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:viewModels="clr-namespace:CrossBreed.ViewModels;assembly=CrossBreed.ViewModels"
	xmlns:views="clr-namespace:CrossBreed.Windows.Views"
	xmlns:entities="clr-namespace:CrossBreed.Entities;assembly=CrossBreed.Entities"
	mc:Ignorable="d"
	x:Name="this"
	Cursor="Hand"
	FontWeight="Bold"
	FontSize="{DynamicResource Theme.FontSize}"
	MouseLeftButtonDown="UserView_OnMouseLeftButtonDown"
	d:DesignHeight="300" d:DesignWidth="300">
	<TextBlock.ContextMenu>
		<ContextMenu StaysOpen="False" DataContext="{Binding PlacementTarget.Character, RelativeSource={RelativeSource Self}}"
			d:DataContext="{d:DesignInstance viewModels:CharacterViewModel}" MaxWidth="300" ButtonBase.Click="ContextMenuClick">
			<ContextMenu.Template>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
							<Setter Property="Margin" Value="5" />
						</Style>
						<DataTemplate x:Key="ListManagementTemplate" DataType="{x:Type viewModels:CharacterList}">
							<TextBlock Text="{Binding Name}" />
						</DataTemplate>
					</ControlTemplate.Resources>
					<Border BorderThickness="2">
						<StackPanel Background="{DynamicResource Theme.Background}">
							<StackPanel Orientation="Horizontal" Margin="10">
								<Image Source="{Binding Image}" Height="80" Width="80" />
								<StackPanel Margin="10, 0, 0, 0">
									<TextBlock Text="{Binding Character.Name}" />
									<TextBlock Text="{Binding LocalizedGender}" Foreground="{Binding GenderColor, Converter={StaticResource MvxColorBrushConverter}}" />
									<TextBlock Text="{Binding LocalizedStatus}" />
								</StackPanel>
							</StackPanel>
							<StackPanel Visibility="{Binding Character.StatusMessage, Converter={StaticResource VisibilityConverter}}">
								<Separator />
								<views:BbCodeView BbCode="{Binding FormattedStatus}" Padding="5" TextWrapping="Wrap" />
							</StackPanel>
							<Separator />
							<StackPanel>
								<Button Content="{Binding [Character_OpenChat]}" Command="{Binding MessageCommand}" Style="{StaticResource PrimaryButton}"
									Margin="5" HorizontalAlignment="Left" />
								<Button Content="{Binding [Character_OpenProfile]}" Click="ProfileButtonClicked" />
								<Button Content="{Binding ToggleBookmarkCommandName}" Command="{Binding ToggleBookmarkCommand}" />
								<Button Content="{Binding [Character_Report]}" Command="{Binding ReportCommand}" />
								<Button Content="{Binding ToggleIgnoreCommandName}" Command="{Binding ToggleIgnoreCommand}" />
								<Separator />
								<Button Content="{Binding [Character_AddList]}" Click="ManageListsButtonClicked">
									<Button.ContextMenu>
										<ContextMenu StaysOpen="False" ItemsSource="{Binding AvailableLists}" MouseLeftButtonDown="AddListItemClicked"
											ItemTemplate="{StaticResource ListManagementTemplate}" />
									</Button.ContextMenu>
								</Button>
								<Button Content="{Binding [Character_RemoveList]}" Click="ManageListsButtonClicked">
									<Button.ContextMenu>
										<ContextMenu StaysOpen="False" ItemsSource="{Binding CharacterLists}" MouseLeftButtonDown="RemoveListItemClicked"
											ItemTemplate="{StaticResource ListManagementTemplate}" />
									</Button.ContextMenu>
								</Button>
							</StackPanel>
							<StackPanel DataContext="{Binding PlacementTarget.ChannelMember, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="{Binding ., Converter={StaticResource VisibilityConverter}}">
								<StackPanel Visibility="{Binding ChannelAdminActionsAvailable}">
									<Separator />
									<Button Content="{Binding [Channel_Kick]}" Command="{Binding ChannelKickCommand}" />
									<Button Content="{Binding [Channel_Ban]}" Command="{Binding ChannelBanCommand}" />
									<Button Content="{Binding ChannelToggleOpCommandName}" Command="{Binding ChannelToggleOpCommand}" />
								</StackPanel>
							</StackPanel>
							<StackPanel Visibility="{Binding AdminActionsAvailable, Converter={StaticResource VisibilityConverter}}">
								<Separator />
								<Button Content="{Binding [Character_Kick]}" Command="{Binding KickCommand}" />
								<Button Content="{Binding [Character_Ban]}" Command="{Binding BanCommand}" />
								<Button Content="{Binding ToggleOpCommandName}" Command="{Binding ToggleOpCommand}" />
							</StackPanel>
						</StackPanel>
					</Border>
				</ControlTemplate>
			</ContextMenu.Template>
		</ContextMenu>
	</TextBlock.ContextMenu>
</TextBlock>